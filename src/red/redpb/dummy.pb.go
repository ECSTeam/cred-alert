// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dummy.proto

/*
Package redpb is a generated protocol buffer package.

It is generated from these files:
	dummy.proto
	repo.proto

It has these top-level messages:
	Repository
*/
package redpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Dummy service

type DummyClient interface {
	DummyCall(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type dummyClient struct {
	cc *grpc.ClientConn
}

func NewDummyClient(cc *grpc.ClientConn) DummyClient {
	return &dummyClient{cc}
}

func (c *dummyClient) DummyCall(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/redpb.Dummy/DummyCall", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Dummy service

type DummyServer interface {
	DummyCall(context.Context, *google_protobuf.Empty) (*google_protobuf.Empty, error)
}

func RegisterDummyServer(s *grpc.Server, srv DummyServer) {
	s.RegisterService(&_Dummy_serviceDesc, srv)
}

func _Dummy_DummyCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DummyServer).DummyCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redpb.Dummy/DummyCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DummyServer).DummyCall(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dummy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "redpb.Dummy",
	HandlerType: (*DummyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DummyCall",
			Handler:    _Dummy_DummyCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dummy.proto",
}

func init() { proto.RegisterFile("dummy.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 112 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x29, 0xcd, 0xcd,
	0xad, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0x4a, 0x4d, 0x29, 0x48, 0x92, 0x92,
	0x4e, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x0b, 0x26, 0x95, 0xa6, 0xe9, 0xa7, 0xe6, 0x16,
	0x94, 0x40, 0xd5, 0x18, 0xb9, 0x70, 0xb1, 0xba, 0x80, 0xb4, 0x08, 0x59, 0x73, 0x71, 0x82, 0x19,
	0xce, 0x89, 0x39, 0x39, 0x42, 0x62, 0x7a, 0x10, 0x3d, 0x7a, 0x30, 0x3d, 0x7a, 0xae, 0x20, 0x3d,
	0x52, 0x38, 0xc4, 0x9d, 0xb8, 0xa3, 0x38, 0x8b, 0x52, 0x53, 0xf4, 0xc1, 0xf6, 0x25, 0xb1, 0x81,
	0x25, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x85, 0xf5, 0x78, 0x43, 0x8c, 0x00, 0x00, 0x00,
}
