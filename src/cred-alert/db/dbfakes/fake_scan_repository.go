// This file was generated by counterfeiter
package dbfakes

import (
	"cred-alert/db"
	"sync"

	"code.cloudfoundry.org/lager"
)

type FakeScanRepository struct {
	StartStub        func(logger lager.Logger, scanType string) db.ActiveScan
	startMutex       sync.RWMutex
	startArgsForCall []struct {
		logger   lager.Logger
		scanType string
	}
	startReturns struct {
		result1 db.ActiveScan
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeScanRepository) Start(logger lager.Logger, scanType string) db.ActiveScan {
	fake.startMutex.Lock()
	fake.startArgsForCall = append(fake.startArgsForCall, struct {
		logger   lager.Logger
		scanType string
	}{logger, scanType})
	fake.recordInvocation("Start", []interface{}{logger, scanType})
	fake.startMutex.Unlock()
	if fake.StartStub != nil {
		return fake.StartStub(logger, scanType)
	} else {
		return fake.startReturns.result1
	}
}

func (fake *FakeScanRepository) StartCallCount() int {
	fake.startMutex.RLock()
	defer fake.startMutex.RUnlock()
	return len(fake.startArgsForCall)
}

func (fake *FakeScanRepository) StartArgsForCall(i int) (lager.Logger, string) {
	fake.startMutex.RLock()
	defer fake.startMutex.RUnlock()
	return fake.startArgsForCall[i].logger, fake.startArgsForCall[i].scanType
}

func (fake *FakeScanRepository) StartReturns(result1 db.ActiveScan) {
	fake.StartStub = nil
	fake.startReturns = struct {
		result1 db.ActiveScan
	}{result1}
}

func (fake *FakeScanRepository) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.startMutex.RLock()
	defer fake.startMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeScanRepository) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ db.ScanRepository = new(FakeScanRepository)
