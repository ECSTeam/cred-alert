// This file was generated by counterfeiter
package dbfakes

import (
	"cred-alert/db"
	"sync"
)

type FakeRepositoryRepository struct {
	FindOrCreateStub        func(*db.Repository) error
	findOrCreateMutex       sync.RWMutex
	findOrCreateArgsForCall []struct {
		arg1 *db.Repository
	}
	findOrCreateReturns struct {
		result1 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeRepositoryRepository) FindOrCreate(arg1 *db.Repository) error {
	fake.findOrCreateMutex.Lock()
	fake.findOrCreateArgsForCall = append(fake.findOrCreateArgsForCall, struct {
		arg1 *db.Repository
	}{arg1})
	fake.recordInvocation("FindOrCreate", []interface{}{arg1})
	fake.findOrCreateMutex.Unlock()
	if fake.FindOrCreateStub != nil {
		return fake.FindOrCreateStub(arg1)
	} else {
		return fake.findOrCreateReturns.result1
	}
}

func (fake *FakeRepositoryRepository) FindOrCreateCallCount() int {
	fake.findOrCreateMutex.RLock()
	defer fake.findOrCreateMutex.RUnlock()
	return len(fake.findOrCreateArgsForCall)
}

func (fake *FakeRepositoryRepository) FindOrCreateArgsForCall(i int) *db.Repository {
	fake.findOrCreateMutex.RLock()
	defer fake.findOrCreateMutex.RUnlock()
	return fake.findOrCreateArgsForCall[i].arg1
}

func (fake *FakeRepositoryRepository) FindOrCreateReturns(result1 error) {
	fake.FindOrCreateStub = nil
	fake.findOrCreateReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeRepositoryRepository) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.findOrCreateMutex.RLock()
	defer fake.findOrCreateMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeRepositoryRepository) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ db.RepositoryRepository = new(FakeRepositoryRepository)
