// This file was generated by counterfeiter
package servicesfakes

import (
	"cred-alert/services"
	"sync"
)

type FakeGithubServiceClient struct {
	GithubStatusStub        func(string) (int, error)
	githubStatusMutex       sync.RWMutex
	githubStatusArgsForCall []struct {
		arg1 string
	}
	githubStatusReturns struct {
		result1 int
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeGithubServiceClient) GithubStatus(arg1 string) (int, error) {
	fake.githubStatusMutex.Lock()
	fake.githubStatusArgsForCall = append(fake.githubStatusArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.recordInvocation("GithubStatus", []interface{}{arg1})
	fake.githubStatusMutex.Unlock()
	if fake.GithubStatusStub != nil {
		return fake.GithubStatusStub(arg1)
	} else {
		return fake.githubStatusReturns.result1, fake.githubStatusReturns.result2
	}
}

func (fake *FakeGithubServiceClient) GithubStatusCallCount() int {
	fake.githubStatusMutex.RLock()
	defer fake.githubStatusMutex.RUnlock()
	return len(fake.githubStatusArgsForCall)
}

func (fake *FakeGithubServiceClient) GithubStatusArgsForCall(i int) string {
	fake.githubStatusMutex.RLock()
	defer fake.githubStatusMutex.RUnlock()
	return fake.githubStatusArgsForCall[i].arg1
}

func (fake *FakeGithubServiceClient) GithubStatusReturns(result1 int, result2 error) {
	fake.GithubStatusStub = nil
	fake.githubStatusReturns = struct {
		result1 int
		result2 error
	}{result1, result2}
}

func (fake *FakeGithubServiceClient) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.githubStatusMutex.RLock()
	defer fake.githubStatusMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeGithubServiceClient) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ services.GithubServiceClient = new(FakeGithubServiceClient)
