syntax = "proto3";

package revokpb;

service Revok {
  rpc GetCredentialCounts(CredentialCountRequest) returns (CredentialCountResponse) {}
  rpc GetOrganizationCredentialCounts(OrganizationCredentialCountRequest) returns (OrganizationCredentialCountResponse) {}
  rpc GetRepositoryCredentialCounts(RepositoryCredentialCountRequest) returns (RepositoryCredentialCountResponse) {}

  rpc Search(SearchQuery) returns (stream SearchResult) {}
}

message CredentialCountRequest {}

message OrganizationCredentialCount {
  string owner = 1;
  int64 count = 2;
}

message CredentialCountResponse {
  repeated OrganizationCredentialCount credentialCounts = 1;
}

message OrganizationCredentialCountRequest {
  string owner = 1;
}

message RepositoryCredentialCount {
  string owner = 1;
  string name = 2;
  int64 count = 3;
}

message OrganizationCredentialCountResponse {
  repeated RepositoryCredentialCount credentialCounts = 1;
}

message RepositoryCredentialCountRequest {
  string owner = 1;
  string name = 2;
}

message BranchCredentialCount {
  string name = 1;
  int64 count = 2;
}

message RepositoryCredentialCountResponse {
  repeated BranchCredentialCount credentialCounts = 1;
}

message SearchQuery {
  string regex = 1;
}

message SearchResult {
  SourceLocation location = 1;
  string content = 2;
}

message SourceLocation {
  Repository repository = 1;
  string revision = 2;
  string path = 3;

  uint32 line_number = 4;
  uint32 location = 5;
  uint32 length = 6;
}

message Repository {
  string owner = 1;
  string name = 2;
}
