// This file was generated by counterfeiter
package revokfakes

import (
	"cred-alert/db"
	"cred-alert/revok"
	"sync"
)

type FakeFetchIntervalUpdater struct {
	UpdateFetchIntervalStub        func(*db.Repository) error
	updateFetchIntervalMutex       sync.RWMutex
	updateFetchIntervalArgsForCall []struct {
		arg1 *db.Repository
	}
	updateFetchIntervalReturns struct {
		result1 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeFetchIntervalUpdater) UpdateFetchInterval(arg1 *db.Repository) error {
	fake.updateFetchIntervalMutex.Lock()
	fake.updateFetchIntervalArgsForCall = append(fake.updateFetchIntervalArgsForCall, struct {
		arg1 *db.Repository
	}{arg1})
	fake.recordInvocation("UpdateFetchInterval", []interface{}{arg1})
	fake.updateFetchIntervalMutex.Unlock()
	if fake.UpdateFetchIntervalStub != nil {
		return fake.UpdateFetchIntervalStub(arg1)
	} else {
		return fake.updateFetchIntervalReturns.result1
	}
}

func (fake *FakeFetchIntervalUpdater) UpdateFetchIntervalCallCount() int {
	fake.updateFetchIntervalMutex.RLock()
	defer fake.updateFetchIntervalMutex.RUnlock()
	return len(fake.updateFetchIntervalArgsForCall)
}

func (fake *FakeFetchIntervalUpdater) UpdateFetchIntervalArgsForCall(i int) *db.Repository {
	fake.updateFetchIntervalMutex.RLock()
	defer fake.updateFetchIntervalMutex.RUnlock()
	return fake.updateFetchIntervalArgsForCall[i].arg1
}

func (fake *FakeFetchIntervalUpdater) UpdateFetchIntervalReturns(result1 error) {
	fake.UpdateFetchIntervalStub = nil
	fake.updateFetchIntervalReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeFetchIntervalUpdater) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.updateFetchIntervalMutex.RLock()
	defer fake.updateFetchIntervalMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeFetchIntervalUpdater) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ revok.FetchIntervalUpdater = new(FakeFetchIntervalUpdater)
