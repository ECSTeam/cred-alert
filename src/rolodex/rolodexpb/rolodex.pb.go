// Code generated by protoc-gen-go.
// source: rolodex.proto
// DO NOT EDIT!

/*
Package rolodexpb is a generated protocol buffer package.

It is generated from these files:
	rolodex.proto

It has these top-level messages:
	GetOwnersRequest
	GetOwnersResponse
	Team
	SlackChannel
*/
package rolodexpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import redpb "red/redpb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetOwnersRequest struct {
	Repository *redpb.Repository `protobuf:"bytes,1,opt,name=repository" json:"repository,omitempty"`
}

func (m *GetOwnersRequest) Reset()                    { *m = GetOwnersRequest{} }
func (m *GetOwnersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOwnersRequest) ProtoMessage()               {}
func (*GetOwnersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetOwnersRequest) GetRepository() *redpb.Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type GetOwnersResponse struct {
	Teams []*Team `protobuf:"bytes,1,rep,name=teams" json:"teams,omitempty"`
}

func (m *GetOwnersResponse) Reset()                    { *m = GetOwnersResponse{} }
func (m *GetOwnersResponse) String() string            { return proto.CompactTextString(m) }
func (*GetOwnersResponse) ProtoMessage()               {}
func (*GetOwnersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetOwnersResponse) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

type Team struct {
	Name         string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SlackChannel *SlackChannel `protobuf:"bytes,2,opt,name=slack_channel,json=slackChannel" json:"slack_channel,omitempty"`
}

func (m *Team) Reset()                    { *m = Team{} }
func (m *Team) String() string            { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()               {}
func (*Team) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetSlackChannel() *SlackChannel {
	if m != nil {
		return m.SlackChannel
	}
	return nil
}

type SlackChannel struct {
	Team string `protobuf:"bytes,1,opt,name=team" json:"team,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *SlackChannel) Reset()                    { *m = SlackChannel{} }
func (m *SlackChannel) String() string            { return proto.CompactTextString(m) }
func (*SlackChannel) ProtoMessage()               {}
func (*SlackChannel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SlackChannel) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *SlackChannel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*GetOwnersRequest)(nil), "rolodexpb.GetOwnersRequest")
	proto.RegisterType((*GetOwnersResponse)(nil), "rolodexpb.GetOwnersResponse")
	proto.RegisterType((*Team)(nil), "rolodexpb.Team")
	proto.RegisterType((*SlackChannel)(nil), "rolodexpb.SlackChannel")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Revok service

type RevokClient interface {
	GetOwners(ctx context.Context, in *GetOwnersRequest, opts ...grpc.CallOption) (*GetOwnersResponse, error)
}

type revokClient struct {
	cc *grpc.ClientConn
}

func NewRevokClient(cc *grpc.ClientConn) RevokClient {
	return &revokClient{cc}
}

func (c *revokClient) GetOwners(ctx context.Context, in *GetOwnersRequest, opts ...grpc.CallOption) (*GetOwnersResponse, error) {
	out := new(GetOwnersResponse)
	err := grpc.Invoke(ctx, "/rolodexpb.Revok/GetOwners", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Revok service

type RevokServer interface {
	GetOwners(context.Context, *GetOwnersRequest) (*GetOwnersResponse, error)
}

func RegisterRevokServer(s *grpc.Server, srv RevokServer) {
	s.RegisterService(&_Revok_serviceDesc, srv)
}

func _Revok_GetOwners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOwnersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RevokServer).GetOwners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rolodexpb.Revok/GetOwners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RevokServer).GetOwners(ctx, req.(*GetOwnersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Revok_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rolodexpb.Revok",
	HandlerType: (*RevokServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOwners",
			Handler:    _Revok_GetOwners_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rolodex.proto",
}

func init() { proto.RegisterFile("rolodex.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x4d, 0x6d, 0x85, 0x4c, 0x5b, 0xb4, 0x7b, 0x31, 0x54, 0x0f, 0x65, 0x41, 0xe8, 0x69,
	0xc1, 0x08, 0x1e, 0xc4, 0x9b, 0x88, 0xde, 0xc4, 0xd5, 0x83, 0x37, 0xd9, 0xb4, 0x03, 0x4a, 0x93,
	0x9d, 0x75, 0x67, 0xfd, 0xf5, 0xdf, 0x4b, 0x36, 0x1a, 0x17, 0xf1, 0x96, 0x97, 0x6f, 0x98, 0x6f,
	0xf6, 0xc1, 0xd4, 0x53, 0x4d, 0x6b, 0xfc, 0x50, 0xce, 0x53, 0x20, 0x91, 0x7f, 0x47, 0x57, 0xcd,
	0xc1, 0xa3, 0xa3, 0xee, 0xb7, 0xbc, 0x84, 0xbd, 0x2b, 0x0c, 0x37, 0xef, 0x16, 0x3d, 0x6b, 0x7c,
	0x79, 0x45, 0x0e, 0xe2, 0x18, 0xe2, 0x04, 0x3f, 0x07, 0xf2, 0x9f, 0x45, 0xb6, 0xc8, 0x96, 0xe3,
	0x72, 0xa6, 0x3c, 0xae, 0x5d, 0xa5, 0x74, 0x0f, 0x74, 0x32, 0x24, 0xcf, 0x60, 0x96, 0xac, 0x61,
	0x47, 0x96, 0x51, 0x1c, 0xc1, 0x28, 0xa0, 0x69, 0xb8, 0xc8, 0x16, 0xdb, 0xcb, 0x71, 0xb9, 0xab,
	0xfa, 0x13, 0xd4, 0x3d, 0x9a, 0x46, 0x77, 0x54, 0x3e, 0xc0, 0xb0, 0x8d, 0x42, 0xc0, 0xd0, 0x9a,
	0x06, 0xa3, 0x30, 0xd7, 0xf1, 0x5b, 0x9c, 0xc3, 0x94, 0x6b, 0xb3, 0xda, 0x3c, 0xae, 0x9e, 0x8c,
	0xb5, 0x58, 0x17, 0x83, 0x78, 0xcd, 0x7e, 0xb2, 0xea, 0xae, 0xe5, 0x17, 0x1d, 0xd6, 0x13, 0x4e,
	0x92, 0x3c, 0x85, 0x49, 0x4a, 0x5b, 0x43, 0xab, 0xfc, 0x31, 0x84, 0xd4, 0x3a, 0xf8, 0xb5, 0x96,
	0xb7, 0x30, 0xd2, 0xf8, 0x46, 0x1b, 0x71, 0x0d, 0x79, 0xff, 0x2c, 0x71, 0x90, 0x48, 0xff, 0x76,
	0x36, 0x3f, 0xfc, 0x1f, 0x76, 0x4d, 0xc8, 0xad, 0x6a, 0x27, 0xd6, 0x7d, 0xf2, 0x15, 0x00, 0x00,
	0xff, 0xff, 0x4d, 0x11, 0x2f, 0xa4, 0x96, 0x01, 0x00, 0x00,
}
