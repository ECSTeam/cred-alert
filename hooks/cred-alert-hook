#!/usr/bin/env bash

# Handle pre-commit, commit-msg and prepare-commit-msg git hooks
#
# Usage:
#
#    Place symlinks or copies of this file in your .git/hooks dir
#    named "pre-commit", "commit-msg", and "prepare-commit-msg"

hook_type="$(basename "${0}")"

pre_commit_diff() {
  git diff --patch --cached
}

prepare_commit_msg_diff() {
  local git_head sha branch dest

  case "$1" in
    merge,)
      git_head=$(env | grep GITHEAD)  # git sets GITHEAD_<sha>=release/1.43
      sha="${git_head##*=}"           # extract <sha> from value above
      branch=$(git symbolic-ref HEAD) # e.g. refs/heads/master
      dest="${branch#refs/heads/}"    # extract 'master' from value above

      git diff --patch "${dest}".."${sha}"
      ;;
  esac
}

case "${hook_type}" in
  pre-commit)
    output=$(pre_commit_diff | cred-alert-cli --diff)
    status="$?"
    if [ "$status" -ne 0 ]; then
      printf "Found possible credentials in the commit! Locations are listed below:\n"
      printf "%s\n" "$output"
    fi
    exit "$status"
  ;;
  commit-msg)
    output=$(cred-alert-cli -f "${1}")
    status="$?"
    if [ "$status" -ne 0 ]; then
      printf "Found possible credentials in the commit message!\n"
      printf "%s\n" "$output"
    fi
    exit "$status"
    ;;
  prepare-commit-msg)
    merge_indicator="${2},${3}"
    output=$(prepare_commit_msg_diff "${merge_indicator}" | cred-alert-cli --diff)
    status="$?"
    if [ "$status" -ne 0 ]; then
      printf "Found possible credentials in the commit! Locations are listed below:\n"
      printf "%s\n" "$output"
    fi
    exit "$status"
    ;;
  *) ;;
esac
